<?xml version="1.0"?>
<launch>
    <arg name="gui" default="false" />
    <arg name="rviz" default="true" />
    
    <arg name="x" value="$(env START_X)" />
    <arg name="y" value="$(env START_Y)" />
    <arg name="z" value="$(env START_Z)" />
    <arg name="yaw" value="$(env START_YAW)" />
    
    <arg name="model_name" value="cr2" />
    
    <arg name="robot_namespace" default="/"/>

    <arg name="mapping" value="$(optenv MAPPING false)" />
    <arg name="s3_bucket" value= "$(optenv S3_BUCKET)" />
    <arg name="robot_testing" value= "$(optenv ROBOT_TESTING false)" />


    <!-- Launch cr2 control -->
    <include file="$(find cr2_control)/launch/control.launch"/>

    <!-- spawn robot -->
    <include file="$(find cr2_description)/launch/description.launch"/>
    <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model"
          args="-urdf -model $(arg model_name) -param robot_description -x $(arg x)
              -y $(arg y)
              -z $(arg z)
              -Y $(arg yaw)"/>

    <!-- Launch the world -->
    <include file="$(find aws_robomaker_hospital_world)/launch/hospital.launch" >
        <arg name="gui" default="$(arg gui)" />
    </include>

    <!-- Run the map server -->
    <arg name="map_file" default="$(find cr2_navigation)/maps/hospital.yaml"/>
    <node name="map_server" pkg="map_server" type="map_server" args="$(arg map_file)" />

    
    <!-- Launch navigation stack -->
    <include file="$(find cr2_navigation)/launch/include/move_base.launch" />    
    <include file="$(find cr2_navigation)/launch/include/ekf.launch" />     

    <!-- Launch amcl package if mapping disabled -->
    <group unless="$(arg mapping)">
        <include file="$(find cr2_navigation)/launch/include/amcl.launch">  
            <arg name="initial_pose_x" value="$(arg x)"/>
            <arg name="initial_pose_y" value="$(arg y)"/>
            <arg name="initial_pose_a" value="$(arg yaw)"/>
            <arg name="scan_topic" value="/front/scan"/>
        </include>
    </group>

    <!-- Launch the mapping functionality if needed -->
    <group if="$(arg mapping)">
        <include file="$(find cr2_navigation)/launch/explore_demo.launch" />  
    </group>
    
    
    <!-- if bucket was provided launch s3 file uploader -->
    <group if="$(eval s3_bucket != '')">
        <include file="$(find aws_s3_uploader)/launch/s3_file_uploader.launch">
            <arg name="s3_bucket" value="$(arg s3_bucket)" />
        </include>         
    </group>
    
    <!-- Launch the robot_testing if needed -->
    <group if="$(arg robot_testing)">
        <include file="$(find cr2_tests)/launch/navigation_test.launch" />  
    </group>

</launch>
